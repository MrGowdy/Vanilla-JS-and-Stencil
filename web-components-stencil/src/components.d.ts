/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MySpinner {
    }
    interface MyTooltip {
        "content": string;
    }
    interface SideDrawer {
        "drawerTitle": string;
        "open": () => boolean;
        "opened": boolean;
    }
    interface StockFinder {
    }
    interface StockPrice {
        "stockSymbol": string;
    }
    interface TestTest {
    }
}
declare global {
    interface HTMLMySpinnerElement extends Components.MySpinner, HTMLStencilElement {
    }
    var HTMLMySpinnerElement: {
        prototype: HTMLMySpinnerElement;
        new (): HTMLMySpinnerElement;
    };
    interface HTMLMyTooltipElement extends Components.MyTooltip, HTMLStencilElement {
    }
    var HTMLMyTooltipElement: {
        prototype: HTMLMyTooltipElement;
        new (): HTMLMyTooltipElement;
    };
    interface HTMLSideDrawerElement extends Components.SideDrawer, HTMLStencilElement {
    }
    var HTMLSideDrawerElement: {
        prototype: HTMLSideDrawerElement;
        new (): HTMLSideDrawerElement;
    };
    interface HTMLStockFinderElement extends Components.StockFinder, HTMLStencilElement {
    }
    var HTMLStockFinderElement: {
        prototype: HTMLStockFinderElement;
        new (): HTMLStockFinderElement;
    };
    interface HTMLStockPriceElement extends Components.StockPrice, HTMLStencilElement {
    }
    var HTMLStockPriceElement: {
        prototype: HTMLStockPriceElement;
        new (): HTMLStockPriceElement;
    };
    interface HTMLTestTestElement extends Components.TestTest, HTMLStencilElement {
    }
    var HTMLTestTestElement: {
        prototype: HTMLTestTestElement;
        new (): HTMLTestTestElement;
    };
    interface HTMLElementTagNameMap {
        "my-spinner": HTMLMySpinnerElement;
        "my-tooltip": HTMLMyTooltipElement;
        "side-drawer": HTMLSideDrawerElement;
        "stock-finder": HTMLStockFinderElement;
        "stock-price": HTMLStockPriceElement;
        "test-test": HTMLTestTestElement;
    }
}
declare namespace LocalJSX {
    interface MySpinner {
    }
    interface MyTooltip {
        "content"?: string;
    }
    interface SideDrawer {
        "drawerTitle"?: string;
        "opened"?: boolean;
    }
    interface StockFinder {
        "onSymbolClicked"?: (event: CustomEvent<string>) => void;
    }
    interface StockPrice {
        "stockSymbol"?: string;
    }
    interface TestTest {
    }
    interface IntrinsicElements {
        "my-spinner": MySpinner;
        "my-tooltip": MyTooltip;
        "side-drawer": SideDrawer;
        "stock-finder": StockFinder;
        "stock-price": StockPrice;
        "test-test": TestTest;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-spinner": LocalJSX.MySpinner & JSXBase.HTMLAttributes<HTMLMySpinnerElement>;
            "my-tooltip": LocalJSX.MyTooltip & JSXBase.HTMLAttributes<HTMLMyTooltipElement>;
            "side-drawer": LocalJSX.SideDrawer & JSXBase.HTMLAttributes<HTMLSideDrawerElement>;
            "stock-finder": LocalJSX.StockFinder & JSXBase.HTMLAttributes<HTMLStockFinderElement>;
            "stock-price": LocalJSX.StockPrice & JSXBase.HTMLAttributes<HTMLStockPriceElement>;
            "test-test": LocalJSX.TestTest & JSXBase.HTMLAttributes<HTMLTestTestElement>;
        }
    }
}
